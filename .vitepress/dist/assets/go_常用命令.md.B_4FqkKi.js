import{_ as t,c as d,o as e,a4 as o}from"./chunks/framework.DF40YQsC.js";const f=JSON.parse('{"title":"常用命令","description":"","frontmatter":{},"headers":[],"relativePath":"go/常用命令.md","filePath":"go/常用命令.md"}'),a={name:"go/常用命令.md"},c=o('<h1 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h1><p>直接在终端输入<code>go help</code>即可显示所有的go命令，以及命令功能简介，主要是用下面几个</p><ul><li>build：编译包和依赖</li><li>clean：移除对象文件</li><li>doc：显示包或者符号的文档</li><li>env：打印go的环境信息</li><li>bug ：启动错误报告</li><li>fix：运行go tool fix</li><li>fmt：运行gofmt进行格式化</li></ul><p>GO的源代码以<code>.go</code>为后缀名存储在计算机中，如果文件名由多部分组成，则使用下划线<code>_</code>对它们进行分隔。文件名不包含空格或者其他特殊字符。</p><p>一个源文件可以包含任意多行的代码，Go本身没有对源文件的大小进行限制。</p><p><code>_</code>本身就是特殊标识符，称为空白标识符。它可以像其他标识符那样用于变量的声明或者赋值（任何类型都可以赋值给它）。但是任何给这个标识符的值都将被抛弃。因为这些值不能在后续的代码中使用。也不可以使用这个标识符作为变量对其他变量进行赋值和运算。</p><h2 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h2><table><thead><tr><th>break</th><th>default</th><th>func</th><th>interface</th><th>select</th></tr></thead><tbody><tr><td>case</td><td>defer</td><td>go</td><td>map</td><td>struct</td></tr><tr><td>chan</td><td>else</td><td>goto</td><td>package</td><td>switch</td></tr><tr><td>const</td><td>fallthrough</td><td>if</td><td>range</td><td>type</td></tr><tr><td>continue</td><td>for</td><td>import</td><td>return</td><td>var</td></tr></tbody></table><h2 id="预定义标识符" tabindex="-1">预定义标识符 <a class="header-anchor" href="#预定义标识符" aria-label="Permalink to &quot;预定义标识符&quot;">​</a></h2><table><thead><tr><th>append</th><th>bool</th><th>byte</th><th>cap</th><th>close</th><th>complex</th><th>complex64</th><th>complex128</th><th>uint16</th></tr></thead><tbody><tr><td>copy</td><td>false</td><td>float32</td><td>float64</td><td>imag</td><td>int</td><td>int8</td><td>int16</td><td>uint32</td></tr><tr><td>int32</td><td>int64</td><td>iota</td><td>len</td><td>make</td><td>new</td><td>nil</td><td>panic</td><td>uint64</td></tr><tr><td>print</td><td>println</td><td>real</td><td>recover</td><td>string</td><td>true</td><td>uint</td><td>uint8</td><td>uintptr</td></tr></tbody></table><p>程序一般由关键字、常量、变量、运算符、类型和函数组成。程序中可能使用一些分隔符，如<code>()</code>、<code>[]</code>、<code>{}</code>。还可能使用标点符号<code>.</code>、<code>,</code>、<code>;</code>、<code>:</code>、<code>:</code>、<code>:=</code>、<code>...</code></p>',11),r=[c];function i(l,h,n,p,s,_){return e(),d("div",null,r)}const m=t(a,[["render",i]]);export{f as __pageData,m as default};
