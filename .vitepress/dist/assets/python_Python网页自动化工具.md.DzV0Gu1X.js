import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.DF40YQsC.js";const E=JSON.parse('{"title":"DrissionPage","description":"","frontmatter":{},"headers":[],"relativePath":"python/Python网页自动化工具.md","filePath":"python/Python网页自动化工具.md"}'),n={name:"python/Python网页自动化工具.md"},t=e(`<h1 id="drissionpage" tabindex="-1">DrissionPage <a class="header-anchor" href="#drissionpage" aria-label="Permalink to &quot;DrissionPage&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>它是一个基于Python的网页自动化工具，它能控制浏览器，也能首发数据包。还能把两者合二为一。可兼顾浏览器自动化的便利性和requests的高效率。它功能强大，内置无数人性化设计和便携功能。它的语法简洁而高雅，代码量少，对新手友好。</p><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>用requests做数据采集面对要登陆的网站时，要分析的数据包、js源码、构造复杂的请求，往往还要应付验证码、js混淆、签名参数等反爬手段。可以很大程度上绕开这些坑，但浏览器运行效率不高。</p><p>因此，这个库的设计初衷，是将 它们合二为一，同时实现“写得快”和“跑得快”。能够在不同需要时切换相应模式，并提供一种人性化的使用方法，提高开发和运行效率。除了合并二者外，本库还以网页为单位封装了常用功能，提供非常简便的操作和语句，使用户可减少细节、专注功能实现。以简单的方式实现强大的功能，使代码更加优雅。</p><p>以前的版本对selenium进行重新封装实现的，从3.0版本开始，作者另起炉灶，对底层进行了重新开发，摆脱了selenium的依赖，增强了功能，提升了运行效率。</p><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><p>本库采用全自研的内核，内置了N多实用功能，对比selenium，有以下优点：</p><ul><li>无webdriver特征</li><li>无需为不同版本的浏览器下载不同的驱动</li><li>运行速度更快</li><li>可以跨iframe查找元素，无需切入切出</li><li>把iframe看作普通元素，获取后可直接在其中查找元素，逻辑更清晰</li><li>可以同时操作浏览器中的多个标签页，即使标签页为非激活状态，无需切换</li><li>可以直接读取浏览器缓存来保存图片，无需用GUI点击另存</li><li>可以对真个网页截图，包括视口外的部分（90以上版本浏览器支持）</li><li>可处理非open状态的shadow-root</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DrissionPage</span></span></code></pre></div><h2 id="入门演示" tabindex="-1">入门演示 <a class="header-anchor" href="#入门演示" aria-label="Permalink to &quot;入门演示&quot;">​</a></h2><p>SessionPage对象和WebPage对象的s模式，可用收发数据包的形式访问网页。</p><p>顾名思义，SessionPage是一个实用Session（requests库）对象的页面，它使用POM模式封装了网络连接和html解析功能，使首发数据包也可以像操作页面一样便利。并且，由于加入了本库独创的查找元素方法，使数据的采集便利性超过requests+beautifulsoup结合。</p><p>SessionPage是本库几个页面对象中最简单的，我们先从它入手。</p><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#创建页面对象</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#访问网页</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://gitee.com/explore/all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#在页面中查找元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.eles(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;t:h3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#遍历元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items[:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #获取当前&lt;h3&gt;元素下的&lt;a&gt;元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lnk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tag:a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #打印&lt;a&gt;元素的文本和href属性</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lnk.text, lnk.link)</span></span></code></pre></div><p>页面类是最主要的工具，用于控制浏览器或收发数据包。</p><p>DrissionPage 包含三种主要页面类。根据需要在其中选择使用。</p><h3 id="📌-chromiumpage" tabindex="-1">📌 \`ChromiumPage <a class="header-anchor" href="#📌-chromiumpage" aria-label="Permalink to &quot;📌 \`ChromiumPage&quot;">​</a></h3><p>如果只要控制浏览器，导入<code>ChromiumPage</code>。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumPage</span></span></code></pre></div><hr><h3 id="📌-sessionpage" tabindex="-1">📌 \`SessionPage <a class="header-anchor" href="#📌-sessionpage" aria-label="Permalink to &quot;📌 \`SessionPage&quot;">​</a></h3><p>如果只要收发数据包，导入<code>SessionPage</code>。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionPage</span></span></code></pre></div><hr><h3 id="📌-webpage" tabindex="-1">📌 <code>WebPage</code> <a class="header-anchor" href="#📌-webpage" aria-label="Permalink to &quot;📌 \`WebPage\`&quot;">​</a></h3><p><code>WebPage</code>是功能最全面的页面类，既可控制浏览器，也可收发数据包。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebPage</span></span></code></pre></div><hr><h2 id="✅️-配置工具" tabindex="-1">✅️ 配置工具 <a class="header-anchor" href="#✅️-配置工具" aria-label="Permalink to &quot;✅️ 配置工具&quot;">​</a></h2><h3 id="📌-chromiumoptions" tabindex="-1">📌 \`ChromiumOptions <a class="header-anchor" href="#📌-chromiumoptions" aria-label="Permalink to &quot;📌 \`ChromiumOptions&quot;">​</a></h3><p><code>ChromiumOptions</code>类用于设置浏览器启动参数。</p><p>这些参数只有在启动浏览器时有用，接管已存在的浏览器时是不生效的。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumOptions</span></span></code></pre></div><hr><h3 id="📌-sessionoptions" tabindex="-1">📌 \`SessionOptions <a class="header-anchor" href="#📌-sessionoptions" aria-label="Permalink to &quot;📌 \`SessionOptions&quot;">​</a></h3><p><code>SessionOptions</code>类用于设置<code>Session</code>对象启动参数。</p><p>用于配置<code>SessionPage</code>或<code>WebPage</code>s 模式的连接参数。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionOptions</span></span></code></pre></div><hr><h3 id="📌-settings" tabindex="-1">📌 \`Settings <a class="header-anchor" href="#📌-settings" aria-label="Permalink to &quot;📌 \`Settings&quot;">​</a></h3><p><code>Settings</code>用于设置全局运行配置，如找不到元素时是否抛出异常等。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Settings</span></span></code></pre></div><hr><h2 id="✅️-其它工具" tabindex="-1">✅️ 其它工具 <a class="header-anchor" href="#✅️-其它工具" aria-label="Permalink to &quot;✅️ 其它工具&quot;">​</a></h2><p>其它可能用到的工具，放在<code>DrissionPage.common</code>路径。</p><h3 id="📌-keys" tabindex="-1">📌 <code>Keys</code> <a class="header-anchor" href="#📌-keys" aria-label="Permalink to &quot;📌 \`Keys\`&quot;">​</a></h3><p>键盘按键类，用于键入 ctrl、alt 等按键。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Keys</span></span></code></pre></div><hr><h3 id="📌-actions" tabindex="-1">📌 \`Actions <a class="header-anchor" href="#📌-actions" aria-label="Permalink to &quot;📌 \`Actions&quot;">​</a></h3><p>动作链，用于执行一系列动作。</p><p>在浏览器页面对象中已有内置，无如特殊需要无需主动导入。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Actions</span></span></code></pre></div><hr><h3 id="📌-by" tabindex="-1">📌 \`By <a class="header-anchor" href="#📌-by" aria-label="Permalink to &quot;📌 \`By&quot;">​</a></h3><p>与 selenium 一致的<code>By</code>类，便于项目迁移。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> By</span></span></code></pre></div><hr><h3 id="📌-其它工具" tabindex="-1">📌 其它工具 <a class="header-anchor" href="#📌-其它工具" aria-label="Permalink to &quot;📌 其它工具&quot;">​</a></h3><ul><li><code>wait_until</code>：可等待传入的方法结果为真</li><li><code>make_session_ele</code>：从 html 文本生成<code>ChromiumElement</code>对象</li><li><code>configs_to_here</code>：把配置文件复制到当前路径</li><li><code>get_blob</code>：获取指定的 blob 资源</li><li><code>tree</code>：用于打印页面对象或元素对象结构</li><li><code>from_selenium</code>：用于对接 selenium 代码</li><li><code>from_playwright</code>：用于对接 playwright 代码</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wait_until</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make_session_ele</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.common </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> configs_to_here</span></span></code></pre></div><hr><h2 id="✅️-异常" tabindex="-1">✅️ 异常 <a class="header-anchor" href="#✅️-异常" aria-label="Permalink to &quot;✅️ 异常&quot;">​</a></h2><p>异常放在<code>DrissionPage.errors</code>路径。</p><p>全部异常详见进阶使用章节。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.errors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ElementNotFoundError</span></span></code></pre></div><hr><h2 id="✅️-衍生对象类型" tabindex="-1">✅️ 衍生对象类型 <a class="header-anchor" href="#✅️-衍生对象类型" aria-label="Permalink to &quot;✅️ 衍生对象类型&quot;">​</a></h2><p>Tab、Element 等对象是由 Page 对象生成，开发过程中需要类型判断时需要导入这些类型。</p><p>可在<code>DrissionPage.items</code>路径导入。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SessionElement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumElement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ShadowRoot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NoneElement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumTab</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebPageTab</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DrissionPage.items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromiumFrame</span></span></code></pre></div>`,75),h=[t];function l(p,o,k,r,d,g){return a(),i("div",null,h)}const y=s(n,[["render",l]]);export{E as __pageData,y as default};
